
//task task1(dependsOn:[assemble]) {
//    println "configure task1"
//}

task task1() {
    println "configure task1"
}

task1.doFirst {



    File file = new File("app")
    def appPath = file.getAbsolutePath()//app文件夹 路径
    println "app路径= ${appPath}"

    def versionName="""1.2.2"""//app版本号
    def generateFilePath="""${appPath}/tools/generate"""//生成的文件存储路径
    def jiaguInputAPKpath="""${appPath}/build/outputs/apk/release/app-release.apk"""//加固apk 输入路径
    def jiaguOutputPath=generateFilePath//加固apk 输出路径
    def jiaguNoSignApkName="app-release_10_jiagu.apk"//加固没签名的apk名称
    def keyFilePath="""${appPath}/tools/channel/key.jks"""//签名文件全路径
    def keyAlias="demo"
    def ksPass="111111"//KeyStore密码
    def keyPass="111111"//签署者的密码，即生成jks时指定alias对应的密码
    def channelFilePath="""${appPath}/tools/channel/channel"""//渠道文件全路径


    def generateFilePathDir = new File(generateFilePath)
    if (!generateFilePathDir.isDirectory()){
        generateFilePathDir.mkdirs()
    }



    def login = """${appPath}/tools/jiagu/java/bin/java -jar ${appPath}/tools/jiagu/jiagu.jar -login 18729440250 lc835350313"""// Create the String
    def loginProc = login.execute()                 // Call *execute* on the string
    loginProc.waitFor()                               // Wait for the command to finish

    if (loginProc.exitValue() == 0) {
        println "jiagu-->登录成功"

        def jiagu = """${appPath}/tools/jiagu/java/bin/java -jar ${appPath}/tools/jiagu/jiagu.jar -jiagu ${jiaguInputAPKpath} ${jiaguOutputPath}"""// Create the String
        def jiaguProc = jiagu.execute()

        jiaguProc.waitFor()

        println "stdout: ${jiaguProc.in.text}" // *out* from the external program is *in* for groovy

        if (jiaguProc.exitValue() == 0) {
            println "jiagu-->jiagu成功"

            def channel = """python ${appPath}/tools/channel/build_channel.py ${versionName} ${jiaguOutputPath}/${jiaguNoSignApkName} ${keyFilePath} ${keyAlias} ${ksPass} ${keyPass} ${generateFilePath} ${channelFilePath}"""// Create the String
            def channelProc = channel.execute()

            println "stdout: ${channelProc.in.text}"
            channelProc.waitFor()

            if (channelProc.exitValue() == 0) {
                println "channel-->打渠道包成功"

            }else{
                println "channel-->打渠道包失败**${channelProc.err.text}**"
            }

        }else{
            println "jiagu-->jiagu出错**${loginProc.err.text}**"
        }

    } else {
        println "jiagu-->登录执行出错**${loginProc.err.text}**"
    }

}

task1.doLast {
    println "task1 doLast"
}



task task2(){
    println "configure task2"
}

task2.doLast {
    File file = new File("app")
    def appPath = file.getAbsolutePath()//app文件夹 路径
    println "app路径= ${appPath}"


    def generateFilePath="""${appPath}/tools/generate"""//生成的文件存储路径
    def jiaguInputAPKpath="""${appPath}/build/outputs/apk/release/app-release.apk"""//加固apk 输入路径
    def jiaguOutputPath="""${appPath}/build/outputs/apk/release"""//加固apk 输出路径
    def jiaguNoSignApkName="app-release_10_jiagu.apk"//加固没签名的apk名称
    def keyFilePath="""${appPath}/tools/channel/key.jks"""//签名文件全路径
    def keyAlias="demo"
    def ksPass="111111"//KeyStore密码
    def keyPass="111111"//签署者的密码，即生成jks时指定alias对应的密码



    def channel = """python ${appPath}/tools/channel/build_channel.py 1.2.2 ${jiaguOutputPath}/${jiaguNoSignApkName} ${keyFilePath} ${keyAlias} ${ksPass} ${keyPass} ${generateFilePath}"""// Create the String
    def channelProc = channel.execute()

    println "stdout: ${channelProc.in.text}"
    channelProc.waitFor()

    if (channelProc.exitValue() == 0) {
        println "channel-->打渠道包成功"

    }else{
        println "channel-->打渠道包失败**${channelProc.err.text}**"
    }
}